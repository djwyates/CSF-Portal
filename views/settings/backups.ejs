<ul class="directory">
  <%- getDirTreeHTML(backupsDirTree) %>
</ul>

<% function getDirTreeHTML(dirTree) {
  if (!dirTree)
    return "<li class='directory__folder'><a class='directory__folder-link' href='#'>backups</a><ul class='directory__folder-contents'></ul></li>";
  if (dirTree.type === "directory") {
    html = "<li class='directory__folder'><a class='directory__folder-link' href='#'>" + dirTree.name + "</a><ul class='directory__folder-contents'>";
    if (dirTree.children.length > 0) {
      dirTree.children.forEach(function(childFile) {
        html += getDirTreeHTML(childFile);
      });
    }
    return html + "</ul></li>";
  } else {
    var file = backupFiles.find(f => resolvePath(f.path) == resolvePath(dirTree.path));
    if (!file) return "<li class='directory__file'><a class='directory__file-link' href='#'>" + dirTree.name + "</a></li>";
    file.data = JSON.parse(file.data);
    var popup = Array.isArray(file.data) ? getArrayPopupHTML(file) : getObjectPopupHTML(file);
    return "<li class='directory__file'><a class='directory__file-link popup__button-activate' href='#'>" + dirTree.name + "</a>" + popup + "</li>";
  }
}
function getArrayPopupHTML(file) {
  return "<div class='popup'><form class='popup__form' action='/settings/backups?_method=put' method='post'"
    + "onsubmit='return confirm(\"Are you sure you want to restore from this backup? It will backup and replace ALL current data of this type!\")'>"
    + "<p class='popup__p'><b>Quantity:</b> " + file.data.length + "</p><input type='hidden' name='data' value='" + JSON.stringify(file.data) + "'/>"
    + "<button class='form__button form__button--small popup__position-1' type='submit'>Restore</button></form>"
    + "<form action='/settings/backups?_method=delete' method='post' onsubmit='return confirm(\"Are you sure you want to permanently delete this backup?\")'>"
    + "<input type='hidden' name='path' value='" + file.path + "'/>"
    + "<button class='form__button form__button--red form__button--small popup__position-2' type='submit'>Delete</button></form></div>";
}
function getObjectPopupHTML(file) {
  var popup = "<div class='popup'><form class='popup__form' action='/settings/backups?_method=put' method='post'"
    + "onsubmit='return confirm(\"Are you sure you want to restore from this backup? It will not overwrite current data.\")'>";
  for (key in file.data) {
    var label = ejs.reformatVar(key);
    if (key == "meetingsAttended" || key == "membersAttended") label = "Attendance";
    else if (key == "id") label = "Student ID";
    else if (key == "termCount") label = "Terms";
    else if (key == "tutorID") label = "Tutor ID";
    else if (key == "tuteeID") label = "Tutee ID";
    else if (key == "phoneNum") label = "Phone";
    else if (key == "parentPhoneNum") label = "Parent Phone";
    var dataToDisplay = file.data[key];
    if (Array.isArray(dataToDisplay)) {
      if (dataToDisplay.length == 0) {
        dataToDisplay = "None";
      } else {
        dataToDisplay = JSON.stringify(dataToDisplay).replace(/"|\[|\]/g, "").split(",");
        if (key == "courses") dataToDisplay = dataToDisplay.map(c => ejs.reformatCourse(c));
        dataToDisplay = ejs.arrayToSentence(dataToDisplay);
      }
    }
    if (key != "_id" && key != "__v" && key != "tutorSessions")
      popup += "<p class='popup__p'><b>" + label + ":</b> " + dataToDisplay + "</p>";
    popup += "<input type='hidden' name='" + key + "' value='" + file.data[key] + "'/>";
  }
  return popup += "<button class='form__button form__button--small popup__position-1' type='submit'>Restore</button></form>"
    + "<form action='/settings/backups?_method=delete' method='post' onsubmit='return confirm(\"Are you sure you want to permanently delete this backup?\")'>"
    + "<input type='hidden' name='path' value='" + file.path + "'/>"
    + "<button class='form__button form__button--red form__button--small popup__position-2' type='submit'>Delete</button></form></div>";
} %>
